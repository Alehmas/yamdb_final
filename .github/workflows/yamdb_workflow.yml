name: Django-app workflow

on: [push]

jobs:
  tests:
    # "Runner" - create an isolated environment with the latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
    # Run actions checkout - a ready-made script
    # to clone the repository
    - uses: actions/checkout@v2
    - name: Set up Python
      # Run actions setup-python - ready script
      # to deploy the Python environment
      uses: actions/setup-python@v2
      with:
        # Choosing a Python version
        python-version: 3.7

    - name: Install dependencies
      run: | 
        # update pip
        python -m pip install --upgrade pip 
        # install flake8 and its plugins
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # install dependencies
        pip install -r api_yamdb/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        # run project check on flake8
        python -m flake8 
        # run developer-written tests
        pytest
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        # Check availability of Docker Hub repository for workflow
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        # Call the docker container builder
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        # Run authorization script on Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        # Push image to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: ./api_yamdb
          push: true
          tags: oleg2006/yamdb_final:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker pull oleg2006/yamdb_final:latest
            sudo docker compose stop
            sudo docker compose rm web
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker compose up -d 
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} completed successfully!